<!DOCTYPE html>
<html>
<head>
	<title>Financial Data Tracker</title>

	<script src="http://code.highcharts.com/stock/highstock.js"></script>
	<script src="https://code.highcharts.com/modules/data.js"></script>
	<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script> -->
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
	<script type="text/javascript" src="https://www.highcharts.com/samples/data/usdeur.js"></script>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/regression/1.4.0/regression.min.js"></script>
	<script src="//rawgithub.com/phpepe/highcharts-regression/master/highcharts-regression.js"> </script>
	<script src="https://code.highcharts.com/modules/data.js"></script>

	<style>
      body {
        background-color: #f2f0e4;
        color: #00667F;
      }
      #data_description {
      	text-align: center;
      }

      .data {
      	color: #e87642;
      }

      #dataRecieved {
      	padding-left: 25%;
      	padding-right: 25%;
      }

      #center_divs {
      	display: table;
      	width: 100%;
      }

      #center_divs > div {
      	text-align: center;
      	display: table-cell;
      	padding: 1em;
      	width: 50%;
      }

      #timeSeriesForm {
      	text-align: center;
      }

      #submit {
      	text-align: center;
      	margin-bottom: 50px;
      }




    </style>
</head>
<body>

<nav class = "navbar navbar-default" role = "navigation">
   
   <div class = "navbar-header">
      <button type = "button" class = "navbar-toggle" 
         data-toggle = "collapse" data-target = "#example-navbar-collapse">
         <span class = "sr-only">Toggle navigation</span>
         <span class = "icon-bar"></span>
         <span class = "icon-bar"></span>
         <span class = "icon-bar"></span>
      </button>
		
      <a class = "navbar-brand" href = "#">Data Tracker</a>
   </div>
   
   <div class = "collapse navbar-collapse" id = "example-navbar-collapse">
	
      <ul class = "nav navbar-nav">
      	<li>
      		<a href="/importer">
			<% link_to "Importer", '/importer' %>
			Importer
		</a>
      	</li>
         <li class="active"><a href = "/graph">Grapher</a></li>
			
			
      </ul>
   </div>
   
</nav>

<div class="container" style="margin-top: 100px;">
      <div class="row">
        <div class="col-lg-12 text-center">
          <h1 class="mt-5">Financial Data Tracker</h1>
          <p class="lead" style="color: #e87642; font-size: 48px; ">Exante Data</p>
        </div>
      </div>
</div>

<h1 style="text-align: center; font-size: 48px; margin-bottom: 50px;">Grapher</h1>

<img src="/graph.png" class="img-responsive" alt="Cinque Terre">

<div id="container" style="width:100%; height:400px; padding-top: 40px;"></div>
<div id="container1" style="width:100%; height:400px; padding-top: 40px;"></div>




<br>

<!-- <div id="data_description"> -->
<div id="dataRecieved">
	<h3>Data Received</h3>
	<b>Category 1:</b><br> <p class="data"><%= @category1 %></p><br>
	<b>Category 2:</b><br> <p class="data"><%= @category2 %></p><br>
	<b>Start date:</b><br> <p class="data"><%= @chosen_start_date %></p><br>
	<b>End date:</b><br> <p class="data"><%= @chosen_end_date %></p><br>
	<b>Category 1 Data:</b><br> <p class="data"><%= @category1_data %></p><br>
	<b>Category 2 Data:</b><br> <p class="data"><%= @category2_data %></p><br>
	<b>Dates:</b><br> <p class="data"><%= @dates %></p><br><br>

	<br>
</div>
<div id="timeSeriesForm">
<h3 style="font-size: 26px;">Enter Time Series and Financial Element Category</h3>

		<br><br>
</div>
<div id="center_divs">

<div>
	<%= form_tag graph_path, method: :get do %>
		Category 1: 
		<br><br>
		<% @categories.each do |category| %>
			<%= radio_button_tag(:category1, category, required: 'required') %>
			<%= label_tag(:category1, category) %>
			<br>
		<% end %>

		<br><br>
</div>

<div>	
		Category 2:
		<br><br>
		<% @categories.each do |category| %>
			<%= radio_button_tag(:category2, category, required: 'required') %>
			<%= label_tag(:category2, category) %>
			<br>
		<% end %>

		<br><br>
</div>
</div>
	<div id="submit">
		<!-- a text field made from Ruby tag syntax. We give it the params name ':daterange' -->
		<!-- and we just give it the normal name 'datarange' THIS IS FOR THE DATERANGE GEM TO WORK-->
		<!-- the 'daterange' name is captured by JQuery... -->
		<%= text_field_tag :daterange, "", name: 'daterange', size: 24 %>
		<%= submit_tag "Redefine search" %>
	</div>

	<% end %>
<!-- </div> -->


</body>

<script type="text/javascript">

	// console.log("daterangepicker --->");
	// console.log($('input[name="daterange"]'));

	function linearRegression(arr1, arr2) {
		console.log("LINEAR EQUATION FUNCTION CALLED");
		var arr1_size = arr1.length;
		var arr2_size = arr2.length;
		console.log("array1 size -> " + arr1_size);
		console.log("array2 size -> " + arr2_size);
		if (arr1_size != arr2_size) {
			alert("Error...exiting");
		}

		//calculate sums
		var x_sum = sumOfArray(arr1);
		var y_sum = sumOfArray(arr2);
		console.log("x sum -> " + x_sum);
		console.log("y sum -> " + y_sum);
		var xx_sum = 0;
		var xy_sum = 0;
		var yy_sum = 0;

		console.log("for the for loop... arr1.length -> " + arr1.length);

		for (var i = 0; i < arr1.length; i++) {
			xx_sum += (arr1[i] * arr1[i]);
			xy_sum += (arr1[i] * arr2[i]);
			yy_sum += (arr2[i] * arr2[i]);
		}
		console.log("xx -> " + xx_sum + " xy-> " + xy_sum + " yy-> " + yy_sum);

		var slope_m = ((arr1_size * xy_sum) - (x_sum * y_sum)) / ((arr1_size * xx_sum) - (x_sum * x_sum));

		var intercept_b = (y_sum - (slope_m * x_sum)) / arr1_size;

		// DOUBLE CHECK TO MAKE SURE THIS IS CORRECT
		var r = (xy_sum - ((1/arr1_size) * x_sum * y_sum)) / (Math.sqrt(((xx_sum) - ((1/arr1_size) * (Math.pow(x_sum, 2)))) * ((yy_sum) - ((1/arr1_size) * (Math.pow(y_sum, 2))))));

		var rSquared = r * r;

		var equationArray = [slope_m, intercept_b, r, rSquared];

		console.log(equationArray);
		return equationArray;
	}

	// function calculateRollingRegression(array1, array2) {
	// 	var rsquared = 0;
	// 	var rsquaredArray = [];	//store the final RSquared values
	// 	var tempArray1 = [];
	// 	var tempArray2 = [];
	// 	var startIndex = 0;
	// 	var endIndex = startIndex+12;
	// 	var initialEnd = 12;
	// 	for (startIndex; startIndex < initialEnd; startIndex++) {
	// 		tempArray1[startIndex] = array1[startIndex];
	// 		tempArray2[startIndex] = array2[startIndex];
	// 	}
	// 	rsquared = linearRegression(tempArray1, tempArray2);
	// 	tempArray1 = [];
	// 	tempArray2 = [];
	// 	rsquaredArray.push(rsquared[3]);	//pushes the rsquare value
	// 	//by the end of this, we should be at startIndex 11
	// 	for (int i = 12; i < array1.length; i++) {
	// 		var tempInd = 0;
	// 		for (int j = startIndex; startIndex < endIndex j++) {
	// 			tempArray1[tempInd] = array1[startIndex];
	// 			tempArray2[tempInd] = array2[startIndex];
	// 			tempInd++;
	// 		}	// once this is filled up as well...
	// 		rsquared = linearRegression(tempArray1, tempArray2);
	// 		tempArray1 = [];
	// 		tempArray2 = [];
	// 		rsquaredArray.push(rsquared[3]);
	// 	}
	// }

	function calculateRollingRegression(array1, array2) {
		console.log("INSIDE CALCULATEROLLINGREGRESSION");
		var rsquared = 0;
		var rsquaredArray = [];
		var tempArray1 = [];
		var tempArray2 = [];
		var startIndex = 1;
		var endIndex = startIndex+12;
		var eqnLine = [];

		//populate rsquaredArray with a year of zeroes
		for (var r = 0; r < 12; r++) {
			rsquaredArray.push(0);
		}
		console.log("rsquaredArray: " + rsquaredArray);

		//we do the following 12 times to obtain the first equation
		for (var i = 0; i < 12; i++) {
			tempArray1[i] = array1[i];
			tempArray2[i] = array2[i];
		}
		console.log("INITIAL SETUP VALUE OF TEMPARRAYS: " + tempArray1.length + " , " + tempArray2.length);
		equationLine = linearRegression(tempArray1, tempArray2);
		rsquared = equationLine[3];	//this should have rsquared
		rsquaredArray.push(rsquared);
		console.log("final INITIAL value of rsquaredArray: " + rsquaredArray);

		//finally we iterate through the entire thing in stages of 12 currently
		for (var j = 12; j < array1.length; j++) {
			var tempIndex = 0;
			for (startIndex; startIndex < endIndex; startIndex++) {
				tempArray1[tempIndex] = array1[startIndex];
				tempArray2[tempIndex] = array2[startIndex];
				if (tempIndex < 12) {
					tempIndex++;
				}
				// tempIndex++;
			}	// at this piont, tempArray should be populated
			console.log("Size of TempArray 1 and 3 -> " + tempArray1.length + " , " + tempArray2.length);
			console.log("value: " + tempArray1);
			equationLine = linearRegression(tempArray1, tempArray2);
			rsquared = equationLine[3];
			rsquaredArray.push(rsquared);	//now we add the other rsquared
		}
		console.log("Outside of the for loops...check answers");
		console.log("rSquaredArray values -------> *****");
		console.log(rsquaredArray);
	}

	function sumOfArray(arr) {
		var sum = 0;
		for (var i = 0; i < arr.length; i++) {
			sum += arr[i];
		}
		console.log("inside of the SumOfArray function....value of sum is -> " + sum);
		return sum;
	}



	$(function () { 

		$('input[name="daterange"]').daterangepicker({
			"startDate": <%= @start_date.strftime('%m/%d/%Y') %>,
			"endDate": <%= @end_date.strftime('%m/%d/%Y') %>
		})

		var array1 = <%= @category1_data.inspect.html_safe %>;
		var array2 = <%= @category2_data.inspect.html_safe %>;
		// var dates = <%= @dates %>.to_a;
		// var dates = [];
		var equationLine = linearRegression(array1, array2);
		var anotherLine = calculateRollingRegression(array1, array2);

		var specialArray = [];
		var extraSpecial = [];
		var india = 0;

		// specialArray = <%= @timestamps %>

		// for (var fuck = 0; fuck < array1.length; fuck++) {
			// <% @dates.each do |date| %>
				// specialArray[india] = <%= date.strftime('%m/%d/%Y') %>
				// console.log("india->");
				// console.log(india);
				// specialArray[india] = <%= date.strftime('%m/%d/%Y') %>;
				// extraSpecial[india] = new Date(specialArray[india]);
				// console.log(extraSpecial[india]);
				// india++;
			// <% end %>
		// }


		console.log("dates -->");
		// console.log(<%= @dates %>);
		console.log("y ----> ");
		console.log(specialArray[11]);
		console.log("Special array length -> ")
		console.log(specialArray.length);
		console.log("end special array");

		for (var special = 0; special < specialArray.length; special++) {
			console.log("specialArray[special]");
		}

		var final_array = [];
		var another_array = [];
		for (var i = 0; i < array1.length; i++) {
			final_array[i] = [array1[i], array2[i]];
		}
		var slope = regression('linear', final_array);

		var m = slope.equation[0], b = slope.equation[1];

		for (var j = 0; j < array1.length; j++) {
			another_array[j] = [array1[j], (array1[j] * m)];
		}

		console.log("m (slope): ")
		console.log(m);

		// console.log("dates");
		// console.log(dates);

		console.log("another_array:");
		console.log(another_array);

		console.log(array1);
		console.log(array2);
		console.log(final_array);
		console.log(final_array.length)

		var myChart1 = Highcharts.chart('container1', {
	        chart: {
	            type: 'scatter',
	            zoomType: 'xy'
	        },
	        rangeSelector: {
	        	enabled: true
	        },
	        title: {
	            text: 'Overall Exante Data Financial Time Series'
	        },
	        xAxis: {
	            text: 'Time Series'
	        },
	        series: [{
                regression: true ,
                regressionSettings: {
                    type: 'linear',
                    color:  'rgba(223, 83, 83, .9)',
                    name: "%eq | r2: %r |"
                },
                name: 'Regression Value',
                data: final_array
    
            }
            , {
            	regression: true,
            	regressionSettings: {
            		type: 'linear',
            		color: 'rgba(133, 44, 11, .9',
            	},
            	name: 'Beta Value',
            	data: another_array
            }
            ]
	    });

	    var myChart = Highcharts.chart('container', {
	        chart: {
	            type: 'line',
	            zoomType: 'xy'
	        },
	        rangeSelector: {
	        	enabled: true
	        },
	        title: {
	            text: 'Overall Exante Data Financial Time Series'
	        },
	        xAxis: {
	            text: 'Time Series'
	        },
	        data: {
				googleSpreadsheetKey: '1eQ-bJShsH4iGgFWWk8rtgEYeqMnP3K-PsyyWDcmMZGs'
				 // https://docs.google.com/spreadsheets/d/1fPThphc4rrus17TrK5d1UytT7D7tNqq5cOmVRI_BUBU/edit?usp=sharing
			}
	    });

	    console.log("hello");

});




</script>



